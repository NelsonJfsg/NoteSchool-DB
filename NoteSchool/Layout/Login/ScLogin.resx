<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>